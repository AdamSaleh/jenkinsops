#+BEGIN_COMMENT
.. title: Configuring plain-text secret in Jenkins master from shell
.. slug: configuring-plain-text-secret-in-jenkins-master-from-shell
.. date: 2018-01-08 18:27:14 UTC+01:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT

* To automatically configure secrets on Jenkins

** make sure you have the right plugins

** create a groovy script with the payload

For example with this groovy file, I can add StringCredentials:

#+BEGIN_SRC groovy

  import jenkins.model.*
  import com.cloudbees.plugins.credentials.*
  import com.cloudbees.plugins.credentials.common.*
  import com.cloudbees.plugins.credentials.domains.*
  import com.cloudbees.plugins.credentials.impl.*
  import org.jenkinsci.plugins.plaincredentials.impl.*
  import hudson.util.Secret

  def credId = args[0]
  def description = args[1]
  def secret = args[2]

  def domain = Domain.global()
  def store = Jenkins.instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()

  def secretText = new StringCredentialsImpl(CredentialsScope.GLOBAL,credId,description, Secret.fromString(secret))

  store.addCredentials(domain, secretText)
#+END_SRC

** execute the script with jenkins-cli
you could create a new credential just by running

#+BEGIN_SRC bash

    jenkins-cli -remoting -s $url groovy script.groovy $ID $CREDENTIAL --username $user --password $password
#+END_SRC
